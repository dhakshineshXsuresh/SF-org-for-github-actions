name: SFDX-CLI Deploy from Repository

on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  SFDX-CLI-Deploy:
    runs-on: ubuntu-latest
    environment: SF-org
    
    steps:
      - name: Log environment info
        run: |
          echo "🐧 GitHub Action running on ${{ runner.os }}"
          echo "🔎 Retrieving ${{ github.ref }} from ${{ github.repository }}."
      

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Salesforce CLI
        run: npm install -g @salesforce/cli

      # - name: Authenticate to Salesforce using JWT
      #   run: |
      #     echo "${{ secrets.JWT_SERVER_KEY }}" > server.key
      #     sfdx force:auth:jwt:grant \
      #       --clientid ${{ secrets.CONSUMER_KEY }} \
      #       -f server.key \
      #       --username ${{ secrets.DEPLOYMENT_USER_NAME }} \
      #       -r ${{ secrets.INSTANCE_URL }} -a orgAlias

      # - name: Printing secret and variable
      #   run: |
      #     echo "Secret ${{ secrets.DK_SECRET1 }}"
      #     echo "Variable ${{ $DK_VAR1 }}"
      #     echo "DK_VAR1"
      - name: Printing secret and variable
        run: |
          echo "Value of DK_SECRET1: ${{ secrets.DK_SECRET1 }}" # Correctly access the secret
          echo "Value of DK_VAR1 (via vars context): ${{ vars.DK_VAR1 }}" # Correct for GitHub repository/environment variables
          echo "Value of DK_VAR1 (via env context, if set): ${{ env.DK_VAR1 }}" # For runner-specific env vars
          # This will print the shell environment variable if it's been set in a previous step
          # or if it's a default GitHub Actions environment variable.
          # If DK_VAR1 is NOT set as a shell env var, this will be empty.
          echo "Value of DK_VAR1 (as shell env var): $DK_VAR1"
          echo "Printing ENV"
          env
#sfdx force:source:deploy --manifest=manifest/package.xml --destructivechanges destruction.xml --testlevel=RunLocalTests -u orgAlias
    #  - name: Deploy using package.xml
     #   run:
     #    sf project deploy start  -o orgAlias --manifest=manifest/package.xml --test-level=RunLocalTests --post-destructive-changes=destruction.xml
            


